function eprim(graph)
        nodes = graph.get_nodes()
        edges = []

        W = list(range(len(nodes)))
        W.remove(0)
        T = [0]

        while len(T) != len(nodes):
            interesting_edges = []
            for node_id in T:
                for node_2_id in W:
                    edge = graph.find_edge(node_id, node_2_id)
                    if edge is not None:
                        interesting_edges.append(edge)
            interesting_edges.sort(key=lambda e: e.get_weight())
            edges.append(interesting_edges[0])
            nodes_of_edge = interesting_edges[0].get_nodes_ids()
            node_1_id = nodes_of_edge[0].get_id()
            node_2_id = nodes_of_edge[1].get_id()
            if node_1_id in T:
                T.append(node_2_id)
                W.remove(node_2_id)
            else:
                T.append(node_1_id)
                W.remove(node_1_id)

        return edges
 end